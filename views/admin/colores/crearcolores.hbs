<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Configurar Colores</title>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0">
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
    <style>
        body {
            margin: 0;
            padding: 0;
            background: linear-gradient(45deg, #49a09d, #5f2c82);
            font-family: sans-serif;
            font-weight: 100;
            color: #fff;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }

        .container {
            background-color: rgba(255, 255, 255, 0.2);
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);
            width: 400px;
        }

        h1 {
            text-align: center;
            color: #fff;
        }

        form {
            display: flex;
            flex-direction: column;
        }

        label {
            margin: 10px 0 5px;
        }

        input[type="text"],
        select {
            padding: 10px;
            margin-bottom: 10px;
            border: none;
            border-radius: 5px;
        }

        .button-40 {
            padding: 10px 20px;
            background-color: #55608f;
            color: white;
            border: none;
            border-radius: 10px;
            margin-top:20px;
            cursor: pointer;
            transition: background-color 0.3s, color 0.3s;
            text-align: center;
        }

        .button-39 {
            padding: 10px 20px;
            background-color: #A90969;
            color: white;
            border: none;
            border-radius: 10px;
            margin-top:15px;
            margin-bottom:15px;
            cursor: pointer;
            transition: background-color 0.3s, color 0.3s;
            text-align: center;
            margin-left: auto;
            margin-right: auto;
            width: 40%;
        }

        input[type="color"] {
            width: 100%; /* Hace que el input ocupe todo el ancho disponible */ /* Añade un poco de padding para mejor visualización */
            border: none; /* Remueve cualquier borde predefinido */
            border-radius: 5px; /* Opcional: Añade bordes redondeados */
            cursor: pointer; /* Cambia el cursor para indicar que el elemento es interactivo */
        }
        .button-40:hover {
            background-color: #6f7bb6;
            color: #222;
        }
        .volver-button {
            background-color: #55608f;
            color: white;
            padding: 10px 20px;
            text-decoration: none;
            border: none;
            display: inline-flex;
            align-items: center;
            font-size: 16px;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s, color 0.3s;
        }

        .volver-button:hover {
            background-color: #6f7bb6;
        }

        .material-icons {
            margin-right: 8px; /* Espacio entre el ícono y el texto */
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Configurar Colores de Integrante</h1>
        <form action="/admin/colores/create" method="post">

            <label for="integranteId">Integrante:</label>
            <select id="integranteId" name="integranteId" >
                {{#each integrantes}}
                    <option value="{{this.id}}">{{this.nombre}}</option>
                {{/each}}
            </select>

            <button type="button" class="button-39" id="generarColores">Colores Aleatorios</button>

            <label for="background">Color de Fondo:</label>
            <input type="color" id="background" name="background" value="{{background}}" placeholder="#ffffff">

            <label for="headerBackground">Color de Fondo del Encabezado:</label>
            <input type="color" id="headerBackground" name="headerBackground" value="{{headerBackground}}" placeholder="#000000">

            <label for="sectionBackground">Color de Fondo de Secciones:</label>
            <input type="color" id="sectionBackground" name="sectionBackground" value="{{sectionBackground}}" placeholder="#cccccc">
            
            <button type="submit" class="button-40">Guardar Colores</button>
        </form>
    </div>
        <a href="/admin/colores/listar" class="volver-button" style="margin-top:15px"> 
            <span class="material-icons">arrow_back</span>
            Volver
        </a>
</body>

{{#if flashMessages.error}}
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        Swal.fire({
            title: 'Error',
            text: '{{flashMessages.error}}',
            icon: 'error',
            confirmButtonText: 'OK'
        });
    </script>
{{/if}}

</html>

<script>
function hslToHex(h, s, l) {
    l /= 100;
    const a = s * Math.min(l, 1 - l) / 100;
    const f = n => {
        const k = (n + h / 30) % 12;
        const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);
        return Math.round(255 * color).toString(16).padStart(2, '0'); // Convertir a Hex
    };
    return `#${f(0)}${f(8)}${f(4)}`;
}

function generarPaletas(numPaletas) {
    let paletas = {};

    for (let i = 0; i < numPaletas; i++) {
        const baseHue = Math.floor(Math.random() * 360);
        const colores = [
            hslToHex(baseHue, 100, 50),
            hslToHex(baseHue + 10, 80, 35),
            hslToHex(baseHue - 10, 80, 65)
        ];
        paletas[`paleta${i + 1}`] = colores;
    }

    return paletas;
}

// Función para aplicar colores aleatorios a los campos del formulario
function generarColores() {
    // Generar 200 paletas
    const paletas = generarPaletas(200);

    // Elegir una gama de colores al azar
    const keys = Object.keys(paletas);
    const gamaSeleccionada = paletas[keys[Math.floor(Math.random() * keys.length)]];

    // Asignar los colores a los campos del formulario
    document.getElementById('background').value = gamaSeleccionada[0];
    document.getElementById('headerBackground').value = gamaSeleccionada[1];
    document.getElementById('sectionBackground').value = gamaSeleccionada[2];
}

// Agregar el evento click al botón en el HTML
document.getElementById('generarColores').addEventListener('click', generarColores);

</script>